import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, SignedIn, SignedOut } from "@clerk/nextjs";
import { useUser, UserButton } from "@clerk/nextjs";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import Image from "next/image";
import { LoadingPage, LoadingSpinner } from "~/components/loading";
import { useState } from "react";
import toast from "react-hot-toast";
import Link from "next/link";

const CreatePostWizard = () => {
  const { user } = useUser();

  const ctx = api.useContext();

  const { mutate, isLoading } = api.posts.createPost.useMutation({
    onSuccess: () => {
      setContent("");
      void ctx.posts.getAll.invalidate();
    },
    onError: (err) => {
      toast.error("Spam limit reached. Try again later." + err.message);
    },
  });
  const [content, setContent] = useState("");

  if (!user) {
    return null;
  }

  return (
    <div className="my-4 flex gap-3 border border-slate-400 p-4">
      <Image
        className="rounded-full"
        src={user.profileImageUrl}
        alt="profile photo"
        width={56}
        height={56}
      />
      <input
        placeholder="Send some emojis!"
        className="grow bg-transparent outline-none"
        value={content}
        onChange={(e) => setContent(e.target.value)}
      ></input>
      {content.length > 0 && !isLoading && (
        <button disabled={isLoading} onClick={() => mutate({ content })}>
          Send
        </button>
      )}
      {isLoading && <LoadingSpinner />}
    </div>
  );
};

type PostViewProps = RouterOutputs["posts"]["getAll"][0];

const PostView = (props: PostViewProps) => {
  const { post, author } = props;

  return (
    <Link href={`/post/${post.id}`}>
      <div className="flex border-b border-slate-400 p-8" key={post.id}>
        <div>
          <Link href={`/${author.id}`}>
            <Image
              className="rounded-full"
              src={author?.profileImageUrl}
              alt="profile picture"
              width={56}
              height={56}
            />
          </Link>
        </div>

        <div className="flex flex-col text-slate-300">
          <div>{author.firstName}</div>
          <div>{post.content}</div>
        </div>
      </div>
    </Link>
  );
};

const Feed = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) {
    return <LoadingPage />;
  }

  return (
    <div className="flex flex-col">
      {data?.map((fullPost) => (
        <PostView key={fullPost.post.id} {...fullPost} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  //prefetch posts for feed
  api.posts.getAll.useQuery();

  if (!user) {
    return <div> Something went wrong. User cannot be retrieved.</div>;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400  md:max-w-2xl">
          <div className="border-b border-slate-400 p-4">
            <SignedIn>
              <UserButton
                appearance={{
                  elements: {
                    userButtonAvatarBox: {
                      width: 56,
                      height: 56,
                    },
                  },
                }}
                afterSignOutUrl="/"
              />
              <CreatePostWizard />
            </SignedIn>
            <SignedOut>
              <SignInButton />
            </SignedOut>
          </div>

          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
